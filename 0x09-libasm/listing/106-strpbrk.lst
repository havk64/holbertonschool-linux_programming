     1                                  BITS 64
     2                                  CPU X64
     3                                  
     4                                  	;;
     5                                  	;; asm_strpbrk - clone of function strpbrk
     6                                  	;;
     7                                  	;; Description:	search a string for any of a set of bytes
     8                                  	;;
     9                                  	;; C Prototype: char *asm_strpbrk(const char *s, const char *accept);
    10                                  	;; @s: a pointer to a string
    11                                  	;; @accept: a pointer to a substring
    12                                  	;; Return: a pointer to the byte in @s that matches one of the bytes
    13                                  	;; in @accept, or NULL if no such byte is found.
    14                                  	;;
    15                                  
    16                                  	global asm_strpbrk
    17                                  
    18                                  segment .text
    19                                  asm_strpbrk:
    20 00000000 55                      	push rbp
    21 00000001 4889E5                  	mov rbp, rsp
    22 00000004 53                      	push rbx
    23 00000005 51                      	push rcx
    24 00000006 678D07                  	lea eax, [edi]
    25                                  
    26                                  loop:
    27 00000009 670FB618                	movzx ebx, BYTE [eax]
    28 0000000D 84DB                    	test bl, bl
    29 0000000F 7417                    	jz notfound
    30 00000011 31C9                    inner:	xor ecx, ecx
    31 00000013 670FB6140E              iloop:	movzx edx, BYTE [esi + ecx]
    32 00000018 84D2                    	test dl, dl
    33 0000001A 7408                    	jz outter
    34 0000001C FFC1                    	inc ecx
    35 0000001E 38D3                    	cmp bl, dl
    36 00000020 7408                    	jz end
    37 00000022 EBEF                    	jmp iloop
    38 00000024 FFC0                    outter:	inc eax
    39 00000026 EBE1                    	jmp loop
    40                                  
    41                                  notfound:
    42 00000028 31C0                    	xor eax, eax
    43                                  end:
    44 0000002A 59                      	pop rcx
    45 0000002B 5B                      	pop rbx
    46 0000002C 4889EC                  	mov rsp, rbp
    47 0000002F 5D                      	pop rbp
    48 00000030 C3                      	ret
    49                                  
